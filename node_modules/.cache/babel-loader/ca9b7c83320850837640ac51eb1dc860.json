{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Devs\\\\corona-template\\\\src\\\\app\\\\advanced-ui\\\\TreeView.js\";\nimport React, { Component } from 'react';\nimport { Treebeard } from 'react-treebeard';\nconst data = {\n  name: 'Electronics',\n  toggled: true,\n  children: [{\n    name: 'Mobiles',\n    toggled: true,\n    children: [{\n      name: 'Mi'\n    }, {\n      name: 'Samsung'\n    }, {\n      name: 'Oppo'\n    }, {\n      name: 'Vivo'\n    }, {\n      name: 'Nokia'\n    }, {\n      name: 'Oneplus'\n    }, {\n      name: 'Apple'\n    }, {\n      name: 'Accessories',\n      toggled: true,\n      children: [{\n        name: 'Headphones & Headsets',\n        children: [{\n          name: 'JBL'\n        }, {\n          name: 'Skullcandy'\n        }, {\n          name: 'Sony'\n        }, {\n          name: 'Samsung'\n        }, {\n          name: 'Mi'\n        }]\n      }, {\n        name: 'Power Banks'\n      }, {\n        name: 'Mobile Cases'\n      }, {\n        name: 'Screen Guards'\n      }, {\n        name: 'Memmory Cards'\n      }]\n    }]\n  }, {\n    name: 'Appliances',\n    children: [{\n      name: 'TV'\n    }, {\n      name: 'Fridge'\n    }, {\n      name: 'Washing Machine'\n    }, {\n      name: 'Microwave Owen'\n    }]\n  }, {\n    name: 'Laptops',\n    loading: true,\n    children: []\n  }, {\n    name: 'Wearables'\n  }, {\n    name: 'Camera',\n    children: [{\n      name: 'DSLR & Mirrorless'\n    }, {\n      name: 'Compact & Bridge Cameras'\n    }, {\n      name: 'Sports & Action'\n    }]\n  }]\n};\nexport class TreeView extends Component {\n  constructor(props) {\n    super(props);\n    this.treeStyle = {\n      tree: {\n        base: {\n          padding: '20px',\n          background: 'inherit',\n          color: '#ffffff'\n        },\n        node: {\n          base: {\n            position: 'relative'\n          },\n          link: {\n            cursor: 'pointer',\n            position: 'relative',\n            padding: '0px 5px',\n            display: 'block'\n          },\n          activeLink: {\n            background: '#ffffff'\n          },\n          toggle: {\n            base: {\n              position: 'relative',\n              display: 'inline-block',\n              verticalAlign: 'top',\n              marginLeft: '-5px',\n              height: '24px',\n              width: '24px'\n            },\n            wrapper: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              margin: '-7px 0 0 -7px',\n              height: '14px'\n            },\n            height: 14,\n            width: 14,\n            arrow: {\n              fill: '#ffffff',\n              strokeWidth: 0\n            }\n          },\n          header: {\n            base: {\n              display: 'inline-block',\n              verticalAlign: 'top',\n              color: '#ffffff'\n            },\n            connector: {\n              width: '2px',\n              height: '12px',\n              borderLeft: 'solid 2px black',\n              borderBottom: 'solid 2px black',\n              position: 'absolute',\n              top: '0px',\n              left: '-21px'\n            },\n            title: {\n              lineHeight: '24px',\n              verticalAlign: 'middle'\n            }\n          },\n          subtree: {\n            listStyle: 'none',\n            paddingLeft: '19px'\n          }\n        }\n      }\n    };\n    this.state = {\n      data\n    };\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(node, toggled) {\n    const _this$state = this.state,\n          cursor = _this$state.cursor,\n          data = _this$state.data;\n\n    if (cursor) {\n      this.setState(() => ({\n        cursor,\n        active: false\n      }));\n    }\n\n    node.active = true;\n\n    if (node.children) {\n      node.toggled = toggled;\n    }\n\n    this.setState(() => ({\n      cursor: node,\n      data: Object.assign({}, data)\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Tree View\"), React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"!#\",\n      onClick: event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"UI Elements\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Tree View\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 grid-margin stretch-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Tree View Beard\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"React Tree View Component. Data-Driven, Fast, Efficient and Customisable\"), React.createElement(\"div\", {\n      className: \"template-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Treebeard, {\n      data: data,\n      onToggle: this.onToggle,\n      style: this.treeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })))))));\n  }\n\n}\nexport default TreeView;","map":{"version":3,"sources":["C:\\React Devs\\corona-template\\src\\app\\advanced-ui\\TreeView.js"],"names":["React","Component","Treebeard","data","name","toggled","children","loading","TreeView","constructor","props","treeStyle","tree","base","padding","background","color","node","position","link","cursor","display","activeLink","toggle","verticalAlign","marginLeft","height","width","wrapper","top","left","margin","arrow","fill","strokeWidth","header","connector","borderLeft","borderBottom","title","lineHeight","subtree","listStyle","paddingLeft","state","onToggle","bind","setState","active","Object","assign","render","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Treebeard} from 'react-treebeard';\n\nconst data = {\n    name: 'Electronics',\n    toggled: true,\n    children: [\n        {\n            name: 'Mobiles',\n            toggled: true,\n            children: [\n                { name: 'Mi' },\n                { name: 'Samsung' },\n                { name: 'Oppo' },\n                { name: 'Vivo' },\n                { name: 'Nokia' },\n                { name: 'Oneplus' },\n                { name: 'Apple' },\n                { \n                    name: 'Accessories' ,\n                    toggled: true,\n                    children: [\n                        {\n                            name: 'Headphones & Headsets',\n                            children: [\n                                {name: 'JBL'},\n                                {name: 'Skullcandy'},\n                                {name: 'Sony'},\n                                {name: 'Samsung'},\n                                {name: 'Mi'},\n                            ]\n                        },\n                        {name: 'Power Banks'},\n                        {name: 'Mobile Cases'},\n                        {name: 'Screen Guards'},\n                        {name: 'Memmory Cards'},\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Appliances',\n            children: [\n                {name: 'TV'},\n                {name: 'Fridge'},\n                {name: 'Washing Machine'},\n                {name: 'Microwave Owen'},\n            ]\n        },\n        {\n            name: 'Laptops',\n            loading: true,\n            children: []\n        },\n        { name: 'Wearables' },\n        {\n            name: 'Camera',\n            children: [\n                {name: 'DSLR & Mirrorless'},\n                {name: 'Compact & Bridge Cameras'},\n                {name: 'Sports & Action'},\n            ]\n        },\n\n    ]\n};\n\nexport class TreeView extends Component {\n    constructor(props){\n        super(props);\n        this.state = {data};\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    treeStyle = {\n        tree: {\n            base: {\n                padding: '20px',\n                background: 'inherit',\n                color: '#ffffff'\n            },\n            node: {\n                base: {\n                    position: 'relative'\n                },\n                link: {\n                    cursor: 'pointer',\n                    position: 'relative',\n                    padding: '0px 5px',\n                    display: 'block'\n                },\n                activeLink: {\n                    background: '#ffffff'\n                },\n                toggle: {\n                    base: {\n                        position: 'relative',\n                        display: 'inline-block',\n                        verticalAlign: 'top',\n                        marginLeft: '-5px',\n                        height: '24px',\n                        width: '24px'\n                    },\n                    wrapper: {\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        margin: '-7px 0 0 -7px',\n                        height: '14px'\n                    },\n                    height: 14,\n                    width: 14,\n                    arrow: {\n                        fill: '#ffffff',\n                        strokeWidth: 0\n                    }\n                },    \n                header: {\n                    base: {\n                        display: 'inline-block',\n                        verticalAlign: 'top',\n                        color: '#ffffff'\n                    },\n                    connector: {\n                        width: '2px',\n                        height: '12px',\n                        borderLeft: 'solid 2px black',\n                        borderBottom: 'solid 2px black',\n                        position: 'absolute',\n                        top: '0px',\n                        left: '-21px'\n                    },\n                    title: {\n                        lineHeight: '24px',\n                        verticalAlign: 'middle'\n                    }\n                },\n                subtree: {\n                    listStyle: 'none',\n                    paddingLeft: '19px'\n                },    \n            }\n        }\n    }\n\n    onToggle(node, toggled){\n        const {cursor, data} = this.state;\n        if (cursor) {\n            this.setState(() => ({cursor, active: false}));\n        }\n        node.active = true;\n        if (node.children) { \n            node.toggled = toggled; \n        }\n        this.setState(() => ({cursor: node, data: Object.assign({}, data)}));\n    }\n\n    render() {\n        const {data} = this.state;\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Tree View\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Tree View</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Tree View Beard</h4>\n                                <p className=\"card-description\">React Tree View Component. Data-Driven, Fast, Efficient and Customisable</p>\n                                <div className=\"template-demo\">\n                                    <Treebeard\n                                        data={data}\n                                        onToggle={this.onToggle}\n                                        style={this.treeStyle}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default TreeView\n"]},"metadata":{},"sourceType":"module"}