{"ast":null,"code":"import _slicedToArray from \"C:\\\\React Devs\\\\CleaningApp\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React Devs\\\\CleaningApp\\\\app\\\\src\\\\app\\\\basic-ui\\\\Modals.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nfunction Modals() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        smShow = _useState2[0],\n        setSmShow = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mdShow = _useState4[0],\n        setMdShow = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lgShow = _useState6[0],\n        setLgShow = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" Modals \"), React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"!#\",\n    onClick: event => event.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"UI Elements\")), React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Modals\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 grid-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Large Modal\"), React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Large sized modal with max-width set to \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"90%\")), React.createElement(Modal.Dialog, {\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    className: \"flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Cancel\"))), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setLgShow(true),\n    className: \"btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Large modal\", React.createElement(\"i\", {\n    className: \"mdi mdi-arrow-right-circle-outline ml-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    size: \"lg\",\n    show: lgShow,\n    onHide: () => setLgShow(false),\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success m-2\",\n    onClick: () => setLgShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light mb-\",\n    onClick: () => setLgShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Cancel\")))))), React.createElement(\"div\", {\n    className: \"col-md-6 grid-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Medium Modal\"), React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Normal modal with default bootstrap settings\"), React.createElement(Modal.Dialog, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    className: \"flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Cancel\"))), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setMdShow(true),\n    className: \"btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Medium modal\", React.createElement(\"i\", {\n    className: \"mdi mdi-arrow-right-circle-outline ml-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    show: mdShow,\n    onHide: () => setMdShow(false),\n    \"aria-labelledby\": \"example-modal-sizes-title-md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    className: \"fleex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success m-2\",\n    onClick: () => setMdShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light m-2\",\n    onClick: () => setMdShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Cancel\")))))), React.createElement(\"div\", {\n    className: \"col-md-6 grid-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Small Modal\"), React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Small modal with max-width set to 300px\"), React.createElement(Modal.Dialog, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    className: \"flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success btn-sm m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light btn-sm m-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Cancel\"))), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setSmShow(true),\n    className: \"btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Small modal\", React.createElement(\"i\", {\n    className: \"mdi mdi-arrow-right-circle-outline ml-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    size: \"sm\",\n    show: smShow,\n    onHide: () => setSmShow(false),\n    \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Modal body text goes here.\")), React.createElement(Modal.Footer, {\n    className: \"flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success btn-sm m-2\",\n    onClick: () => setSmShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    variant: \"light btn-sm m-2\",\n    onClick: () => setSmShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Cancel\"))))))));\n}\n\nexport default Modals;","map":{"version":3,"sources":["C:\\React Devs\\CleaningApp\\app\\src\\app\\basic-ui\\Modals.js"],"names":["React","useState","Button","Modal","Modals","smShow","setSmShow","mdShow","setMdShow","lgShow","setLgShow","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nfunction Modals () {\n  const [smShow, setSmShow] = useState(false);\n  const [mdShow, setMdShow] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\"> Modals </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Modals</li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Large Modal</h4>\n              <p className=\"card-description\">Large sized modal with max-width set to <code>90%</code></p>\n                {/* Dummy Modal Starts  */}\n              <Modal.Dialog size=\"lg\">\n                <Modal.Header closeButton>\n                  <Modal.Title>Modal title</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <p>Modal body text goes here.</p>\n                </Modal.Body>\n\n                <Modal.Footer className=\"flex-wrap\">\n                  <Button variant=\"success m-2\">Submit</Button>\n                  <Button variant=\"light m-2\">Cancel</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n              {/* Dummy Modal Ends */}\n              {/* Modal starts */}\n              <div className=\"text-center\">\n                <Button onClick={() => setLgShow(true)} className=\"btn-sm\">Large modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\n              </div>\n              <Modal\n                size=\"lg\"\n                show={lgShow}\n                onHide={() => setLgShow(false)}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Modal title</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <p>Modal body text goes here.</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"success m-2\" onClick={() => setLgShow(false)}>Submit</Button>\n                  <Button variant=\"light mb-\" onClick={() => setLgShow(false)}>Cancel</Button>\n                </Modal.Footer>\n              </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Medium Modal</h4>\n              <p className=\"card-description\">Normal modal with default bootstrap settings</p>\n                {/* Dummy Modal Starts  */}\n                <Modal.Dialog>\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success m-2\">Submit</Button>\n                    <Button variant=\"light m-2\">Cancel</Button>\n                  </Modal.Footer>\n                </Modal.Dialog>\n                {/* Dummy Modal Ends */}\n                {/* Modal starts */}\n                <div className=\"text-center\">\n                  <Button onClick={() => setMdShow(true)} className=\"btn-sm\">Medium modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\n                </div>\n                <Modal\n                  show={mdShow}\n                  onHide={() => setMdShow(false)}\n                  aria-labelledby=\"example-modal-sizes-title-md\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"fleex-wrap\">\n                    <Button variant=\"success m-2\" onClick={() => setMdShow(false)}>Submit</Button>\n                    <Button variant=\"light m-2\" onClick={() => setMdShow(false)}>Cancel</Button>\n                  </Modal.Footer>\n                </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Small Modal</h4>\n              <p className=\"card-description\">Small modal with max-width set to 300px</p>\n                {/* Dummy Modal Starts  */}\n                <Modal.Dialog size=\"sm\">\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success btn-sm m-2\">Submit</Button>\n                    <Button variant=\"light btn-sm m-2\">Cancel</Button>\n                  </Modal.Footer>\n                </Modal.Dialog>\n                {/* Dummy Modal Ends */}\n                {/* Modal starts */}\n                <div className=\"text-center\">\n                  <Button onClick={() => setSmShow(true)} className=\"btn-sm\">Small modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\n                </div>\n                <Modal\n                  size=\"sm\"\n                  show={smShow}\n                  onHide={() => setSmShow(false)}\n                  aria-labelledby=\"example-modal-sizes-title-sm\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <p>Modal body text goes here.</p>\n                  </Modal.Body>\n\n                  <Modal.Footer className=\"flex-wrap\">\n                    <Button variant=\"success btn-sm m-2\" onClick={() => setSmShow(false)}>Submit</Button>\n                    <Button variant=\"light btn-sm m-2\" onClick={() => setSmShow(false)}>Cancel</Button>\n                  </Modal.Footer>\n                </Modal>\n              {/* Modal Ends */}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Modals\n"]},"metadata":{},"sourceType":"module"}