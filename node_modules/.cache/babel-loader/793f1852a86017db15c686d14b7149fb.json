{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Devs\\\\CleaningApp\\\\app\\\\src\\\\app\\\\basic-ui\\\\Tooltips.js\";\nimport React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip, Button, ButtonToolbar, Popover } from 'react-bootstrap';\nexport class Tooltips extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \" Tooltips \"), React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"!#\",\n      onClick: event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"UI Elements\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Tooltips\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 stretch-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Basic tooltip\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Basic tooltip demo that appears on hover\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Hover the below button for interactive demo\"), React.createElement(OverlayTrigger, {\n      overlay: React.createElement(Tooltip, {\n        id: \"tooltip-disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Basic Tooltip\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      style: {\n        pointerEvents: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Hover me\")))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Tooltip positions\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Add attribute \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"placement={position}\"), \" to the element\"), React.createElement(\"div\", {\n      className: \"tooltip-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, ['top', 'right', 'bottom', 'left'].map(placement => React.createElement(OverlayTrigger, {\n      key: placement,\n      placement: placement,\n      overlay: React.createElement(Tooltip, {\n        id: \"tooltip-\".concat(placement),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Tooltip on \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, placement), \".\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Tooltip on \", placement)))))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Tooltip Colors\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add attribute \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"className={`tooltip-{color}`}\"), \" to the element\"), React.createElement(\"div\", {\n      className: \"tooltip-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, ['success', 'info', 'warning', 'primary', 'danger'].map(color => React.createElement(OverlayTrigger, {\n      overlay: React.createElement(Tooltip, {\n        className: \"tooltip-\".concat(color),\n        id: \"tooltip-\".concat(color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Tooltip on \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, color), \".\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"\".concat(color),\n      className: \"mr-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Tooltip \", color)))))))), React.createElement(\"div\", {\n      className: \"col-md-6 stretch-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Basic popover\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Basic popover demo that appears on click\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Click the below button for interactive demo\"), React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: React.createElement(Popover, {\n        id: \"popover-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Popover.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Popover title\"), React.createElement(Popover.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam.\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Click me\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Popover positions\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add attribute \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"placement=\\\"{position}\\\"\"), \" to the element\"), React.createElement(\"div\", {\n      className: \"popover-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, ['top', 'right', 'bottom', 'left'].map(placement => React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      key: placement,\n      placement: placement,\n      overlay: React.createElement(Popover, {\n        id: \"popover-positioned-\".concat(placement),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Popover.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Popover \".concat(placement)), React.createElement(Popover.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam.\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Popover on \", placement)))))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Popover Colors\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add attribute \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"placement=\\\"{position}\\\"\"), \" to the element\"), React.createElement(\"div\", {\n      className: \"popover-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, ['success', 'info', 'warning', 'primary', 'danger'].map(color => React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      overlay: React.createElement(Popover, {\n        id: \"popover-color-\".concat(color),\n        className: \"popover-\".concat(color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Popover.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Popover \".concat(color)), React.createElement(Popover.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam.\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mr-2 mb-2\",\n      variant: \"\".concat(color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Popover on \", color))))))))));\n  }\n\n}\nexport default Tooltips;","map":{"version":3,"sources":["C:\\React Devs\\CleaningApp\\app\\src\\app\\basic-ui\\Tooltips.js"],"names":["React","Component","OverlayTrigger","Tooltip","Button","ButtonToolbar","Popover","Tooltips","render","event","preventDefault","pointerEvents","map","placement","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip, Button, ButtonToolbar, Popover } from 'react-bootstrap';\n\nexport class Tooltips extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> Tooltips </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Tooltips</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Basic tooltip</h4>\n                <p className=\"card-description\">Basic tooltip demo that appears on hover</p>\n                <p>Hover the below button for interactive demo</p>\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Basic Tooltip</Tooltip>}>\n                  <span className=\"d-inline-block\">\n                    <Button variant=\"primary\" style={{ pointerEvents: 'none' }}>\n                      Hover me\n                    </Button>\n                  </span>\n                </OverlayTrigger>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Tooltip positions</h4>\n                <p className=\"card-description\">Add attribute <code>placement=&#123;position&#125;</code> to the element</p>\n                <div className=\"tooltip-demo\">\n                <ButtonToolbar>\n                  {['top', 'right', 'bottom', 'left'].map(placement => (\n                    <OverlayTrigger\n                      key={placement}\n                      placement={placement}\n                      overlay={\n                        <Tooltip id={`tooltip-${placement}`}>\n                          Tooltip on <strong>{placement}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant=\"primary\">Tooltip on {placement}</Button>\n                    </OverlayTrigger>\n                  ))}\n                </ButtonToolbar>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Tooltip Colors</h4>\n                <p className=\"card-description\">Add attribute <code>className=&#123;`tooltip-&#123;color&#125;`&#125;</code> to the element</p>\n                <div className=\"tooltip-demo\">\n                <ButtonToolbar>\n                  {['success', 'info', 'warning', 'primary', 'danger'].map(color => (\n                    <OverlayTrigger\n                      overlay={\n                        <Tooltip className={`tooltip-${color}`} id={`tooltip-${color}`}>\n                          Tooltip on <strong>{color}</strong>.\n                        </Tooltip>\n                      }\n                    >\n                      <Button variant={`${color}`} className=\"mr-2 mb-2\">Tooltip {color}</Button>\n                    </OverlayTrigger>\n                  ))}\n                </ButtonToolbar>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Basic popover</h4>\n                <p className=\"card-description\">Basic popover demo that appears on click</p>\n                <p>Click the below button for interactive demo</p>\n                <OverlayTrigger\n                  trigger=\"click\"\n                  placement=\"right\"\n                  overlay={\n                    <Popover id=\"popover-basic\">\n                      <Popover.Title as=\"h3\">Popover title</Popover.Title>\n                      <Popover.Content>\n                        Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <Button variant=\"primary\">Click me</Button>\n                </OverlayTrigger>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Popover positions</h4>\n                <p className=\"card-description\">Add attribute <code>placement=\"&#123;position&#125;\"</code> to the element</p>\n                <div className=\"popover-demo\">\n                  <ButtonToolbar>\n                    {['top', 'right', 'bottom', 'left'].map(placement => (\n                      <OverlayTrigger\n                        trigger=\"click\"\n                        key={placement}\n                        placement={placement}\n                        overlay={\n                          <Popover id={`popover-positioned-${placement}`}>\n                            <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                            <Popover.Content>\n                              Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <Button variant=\"primary\">Popover on {placement}</Button>\n                      </OverlayTrigger>\n                    ))}\n                  </ButtonToolbar>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Popover Colors</h4>\n                <p className=\"card-description\">Add attribute <code>placement=\"&#123;position&#125;\"</code> to the element</p>\n                <div className=\"popover-demo\">\n                  <ButtonToolbar>\n                    {['success', 'info', 'warning', 'primary', 'danger'].map(color => (\n                      <OverlayTrigger\n                        trigger=\"click\"\n                        overlay={\n                          <Popover id={`popover-color-${color}`} className={`popover-${color}`}>\n                            <Popover.Title as=\"h3\">{`Popover ${color}`}</Popover.Title>\n                            <Popover.Content>\n                              Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <Button className=\"mr-2 mb-2\" variant={`${color}`}>Popover on {color}</Button>\n                      </OverlayTrigger>\n                    ))}\n                  </ButtonToolbar>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tooltips\n"]},"metadata":{},"sourceType":"module"}