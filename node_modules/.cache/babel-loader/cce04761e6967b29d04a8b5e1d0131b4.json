{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const StockSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: [{\n      alışfiyat: 0,\n      birim: \"SAYFA\",\n      id: 1,\n      kdv: \"%40\",\n      miktar: 0,\n      satışfiyat: 140,\n      stokadı: \"İNGİLİZCE\",\n      stokkod: \"Lang1\",\n      İskonto: 0\n    }]\n  },\n  reducers: {\n    getvalue: state => {\n      const config = {\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n        }\n      };\n      axios.get('http://localhost:18598/api/Stok/GetStokAll', config).then(res => {\n        console.log('girdim');\n        products = res.data;\n        console.log(products);\n      }).catch(error => {\n        if (error.response.status == '401') {\n          console.log('döndürüom');\n          history.push(\"/Login\");\n        }\n      });\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nconst _StockSlice$actions = StockSlice.actions,\n      increment = _StockSlice$actions.increment,\n      decrement = _StockSlice$actions.decrement,\n      incrementByAmount = _StockSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport default StockSlice.reducer;","map":{"version":3,"sources":["C:\\React Devs\\Star Note interpol T\\app\\src\\app\\Redux\\Stock\\StockSlice.js"],"names":["createSlice","StockSlice","name","initialState","value","alışfiyat","birim","id","kdv","miktar","satışfiyat","stokadı","stokkod","İskonto","reducers","getvalue","state","config","headers","Authorization","localStorage","getItem","axios","get","then","res","console","log","products","data","catch","error","response","status","history","push","decrement","incrementByAmount","action","payload","actions","increment","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,SAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,SAAS,EAAE,CAAb;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,GAAG,EAAE,KAHC;AAINC,MAAAA,MAAM,EAAE,CAJF;AAKNC,MAAAA,UAAU,EAAE,GALN;AAMNC,MAAAA,OAAO,EAAE,WANH;AAONC,MAAAA,OAAO,EAAE,OAPH;AAQNC,MAAAA,OAAO,EAAE;AARH,KAAD;AADK,GAFsB;AAapCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAAf;AADI,OAAf;AAIAC,MAAAA,KAAK,CAACC,GAAN,CAAU,4CAAV,EAAwDN,MAAxD,EACGO,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,QAAAA,QAAQ,GAAEH,GAAG,CAACI,IAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,OALH,EAMGE,KANH,CAMSC,KAAK,IAAI;AACd,YAAIA,KAAK,CAACC,QAAN,CAAeC,MAAf,IAAyB,KAA7B,EAAoC;AAClCP,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAO,UAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD;AACF,OAXH;AAaD,KAnBO;AAoBRC,IAAAA,SAAS,EAAGpB,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACZ,KAAN,IAAe,CAAf;AACD,KAtBO;AAuBRiC,IAAAA,iBAAiB,EAAE,CAACrB,KAAD,EAAQsB,MAAR,KAAmB;AACpCtB,MAAAA,KAAK,CAACZ,KAAN,IAAekC,MAAM,CAACC,OAAtB;AACD;AAzBO;AAb0B,CAAD,CAA9B,C,CA0CP;;4BAC2DtC,UAAU,CAACuC,O;MAAvDC,S,uBAAAA,S;MAAWL,S,uBAAAA,S;MAAWC,iB,uBAAAA,iB;;AAErC,eAAepC,UAAU,CAACyC,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const StockSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: [{ alışfiyat: 0,\r\n      birim: \"SAYFA\",\r\n      id: 1,\r\n      kdv: \"%40\",\r\n      miktar: 0,\r\n      satışfiyat: 140,\r\n      stokadı: \"İNGİLİZCE\",\r\n      stokkod: \"Lang1\",\r\n      İskonto: 0}],\r\n  },\r\n  reducers: {\r\n    getvalue: (state) => {\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      };\r\n    \r\n      axios.get('http://localhost:18598/api/Stok/GetStokAll', config)\r\n        .then(res => {\r\n          console.log('girdim')\r\n          products=(res.data);\r\n          console.log(products)\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status == '401') {\r\n            console.log('döndürüom')\r\n            history.push(\"/Login\")\r\n          }\r\n        })\r\n     \r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = StockSlice.actions\r\n\r\nexport default StockSlice.reducer"]},"metadata":{},"sourceType":"module"}