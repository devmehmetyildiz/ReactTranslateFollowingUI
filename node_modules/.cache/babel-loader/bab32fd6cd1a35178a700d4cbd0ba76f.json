{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Devs\\\\corona-template\\\\src\\\\app\\\\notifications\\\\Notifications.js\";\nimport React, { Component } from 'react';\nimport cogoToast from 'cogo-toast';\nimport Alert from 'react-bootstrap/Alert';\nexport class Notifications extends Component {\n  constructor(...args) {\n    super(...args);\n    this.toastoptions = {\n      hideAfter: 5,\n      position: 'top-right',\n      heading: 'Attention'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Notifications\"), React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"!#\",\n      onClick: event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"UI Features\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Notifications\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 grid-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card px-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Toast Styles\"), React.createElement(\"p\", {\n      className: \"card-description mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Click on the below buttons for notifications in different styles.\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Specify the predefined types of toasts - success, info, warn and error\"), React.createElement(\"div\", {\n      className: \"template-demo d-flex justify-content-md-between flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-fw\",\n      onClick: () => cogoToast.success('This is a success message!', this.toastoptions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Success\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info btn-fw\",\n      onClick: () => cogoToast.info('This is a success message!', this.toastoptions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Info\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning btn-fw\",\n      onClick: () => cogoToast.warn('This is a success message!', this.toastoptions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Warning\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-fw\",\n      onClick: () => cogoToast.error('This is a success message!', this.toastoptions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Error\"))))), React.createElement(\"div\", {\n      className: \"col-12 grid-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card px-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Toast Positions\"), React.createElement(\"p\", {\n      className: \"card-description mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"The \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"position\"), \" property can be used to specify the predefined positions of toasts.\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Specify the predefined types of toasts - success, info, warn and error\"), React.createElement(\"div\", {\n      className: \"template-demo d-flex justify-content-md-between flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Top Left!', {\n        position: 'top-left'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Top Left\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Top Center!', {\n        position: 'top-center'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Top Center\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Top Right!', {\n        position: 'top-right'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Top Right\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Bottom Left!', {\n        position: 'bottom-left'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Bottom Left\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Bottom Center!', {\n        position: 'bottom-center'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Bottom Center\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary btn-sm\",\n      onClick: () => cogoToast.info('Bottom Right!', {\n        position: 'bottom-right'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Bottom Right\"))))), React.createElement(\"div\", {\n      className: \"col-md-6 grid-margin stretch-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Bootstrap alert\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"variant\"), \"s.\"), ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((variant, idx) => React.createElement(Alert, {\n      key: idx,\n      variant: variant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"This is a \", variant, \" alert\\u2014check it out!\"))))), React.createElement(\"div\", {\n      className: \"col-md-6 grid-margin stretch-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Custom alert\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.\"), React.createElement(Alert, {\n      variant: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p-3 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Well done! You successfully read this important alert message.\"), React.createElement(\"p\", {\n      className: \"mb-0 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-secondary mb-2 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(\"button\", {\n      className: \"btn btn-inverse-secondary mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Alert, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p-3 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Heads up! This alert needs your attention, but it's not super important.\"), React.createElement(\"p\", {\n      className: \"mb-0 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-info mb-2 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(\"button\", {\n      className: \"btn btn-light mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Cancel\"))))))));\n  }\n\n}\nexport default Notifications;","map":{"version":3,"sources":["C:\\React Devs\\corona-template\\src\\app\\notifications\\Notifications.js"],"names":["React","Component","cogoToast","Alert","Notifications","toastoptions","hideAfter","position","heading","render","event","preventDefault","success","info","warn","error","map","variant","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport cogoToast from 'cogo-toast';\nimport Alert from 'react-bootstrap/Alert'\n\nexport class Notifications extends Component {\n\n    toastoptions = {\n        hideAfter: 5,\n        position: 'top-right',\n        heading: 'Attention'\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Notifications\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Features</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Notifications</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Toast Styles</h4>\n                                <p className=\"card-description mb-0\">\n                                Click on the below buttons for notifications in different styles. \n                                </p>\n                                <p className=\"card-description\">\n                                Specify the predefined types of toasts - success, info, warn and error\n                                </p>\n                                <div className=\"template-demo d-flex justify-content-md-between flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-success btn-fw\" onClick={() => cogoToast.success('This is a success message!', this.toastoptions)} >Success</button>\n                                    <button type=\"button\" className=\"btn btn-info btn-fw\" onClick={() => cogoToast.info('This is a success message!', this.toastoptions)} >Info</button>\n                                    <button type=\"button\" className=\"btn btn-warning btn-fw\" onClick={() => cogoToast.warn('This is a success message!', this.toastoptions)} >Warning</button>\n                                    <button type=\"button\" className=\"btn btn-danger btn-fw\" onClick={() => cogoToast.error('This is a success message!', this.toastoptions)} >Error</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 grid-margin\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Toast Positions</h4>\n                                <p className=\"card-description mb-0\">\n                                The <code>position</code> property can be used to specify the predefined positions of toasts.\n                                </p>\n                                <p className=\"card-description\">\n                                Specify the predefined types of toasts - success, info, warn and error\n                                </p>\n                                <div className=\"template-demo d-flex justify-content-md-between flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Left!', {position: 'top-left'})} >Top Left</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Center!', {position: 'top-center'})} >Top Center</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Top Right!', {position: 'top-right'})} >Top Right</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Left!', {position: 'bottom-left'})} >Bottom Left</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Center!', {position: 'bottom-center'})} >Bottom Center</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => cogoToast.info('Bottom Right!', {position: 'bottom-right'})} >Bottom Right</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Bootstrap alert</h4>\n                                <p className=\"card-description\">\n                                Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight <code>variant</code>s.\n                                </p>\n                                {\n                                    [\n                                        'primary',\n                                        'secondary',\n                                        'success',\n                                        'danger',\n                                        'warning',\n                                        'info',\n                                        'light',\n                                        'dark',\n                                      ].map((variant, idx) => (\n                                        <Alert key={idx} variant={variant}>\n                                          This is a {variant} alert—check it out!\n                                        </Alert>\n                                      ))\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Custom alert</h4>\n                                <p className=\"card-description\">Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.</p>\n                                <Alert variant=\"secondary\">\n                                    <p className=\"p-3 mb-0\">\n                                    Well done! You successfully read this important alert message.\n                                    </p>\n                                    <p className=\"mb-0 p-3\">\n                                        <button className=\"btn btn-secondary mb-2 mr-2\">Ok</button><button className=\"btn btn-inverse-secondary mb-2\">Cancel</button>\n                                    </p>\n                                </Alert>\n                                <Alert variant=\"info\">\n                                    <p className=\"p-3 mb-0\">\n                                    Heads up! This alert needs your attention, but it's not super important.\n                                    </p>\n                                    <p className=\"mb-0 p-3\">\n                                        <button className=\"btn btn-info mb-2 mr-2\">Ok</button><button className=\"btn btn-light mb-2\">Cancel</button>\n                                    </p>\n                                </Alert>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Notifications\n"]},"metadata":{},"sourceType":"module"}