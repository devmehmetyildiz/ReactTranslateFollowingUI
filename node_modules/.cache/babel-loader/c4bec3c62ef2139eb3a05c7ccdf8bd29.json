{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Devs\\\\CleaningApp\\\\app\\\\src\\\\app\\\\form-elements\\\\Validation.js\";\nimport React, { Component } from 'react';\nimport { Form, InputGroup, Col, Button } from 'react-bootstrap';\nexport class Validation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validated: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      validated: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Form Validation\"), React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"!#\",\n      onClick: event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Forms\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Validation Chart\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 grid-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Basic Form Validation\"), React.createElement(Form, {\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      controlId: \"validationCustom01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"First name\",\n      defaultValue: \"Mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      controlId: \"validationCustom02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Last name\",\n      defaultValue: \"Otto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      controlId: \"validationCustomUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Username\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"@\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Please choose a username.\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      controlId: \"validationCustom03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"City\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"City\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Please provide a valid city.\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationCustom04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"State\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"State\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Please provide a valid state.\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"\",\n      controlId: \"validationCustom05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Zip\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Please provide a valid zip.\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      required: true,\n      label: \"Agree to terms and conditions\",\n      feedback: \"You must agree before submitting.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Submit form\")))))));\n  }\n\n}\nexport default Validation;","map":{"version":3,"sources":["C:\\React Devs\\CleaningApp\\app\\src\\app\\form-elements\\Validation.js"],"names":["React","Component","Form","InputGroup","Col","Button","Validation","constructor","props","state","validated","handleSubmit","bind","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form, InputGroup, Col, Button} from 'react-bootstrap';\n\nexport class Validation extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            validated: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({validated: true});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Form Validation\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Forms</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Validation Chart</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12 grid-margin\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Basic Form Validation</h4>\n                                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\n                                        <Form.Label>First name</Form.Label>\n                                        <Form.Control\n                                            required\n                                            type=\"text\"\n                                            placeholder=\"First name\"\n                                            defaultValue=\"Mark\"\n                                        />\n                                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n                                        <Form.Label>Last name</Form.Label>\n                                        <Form.Control\n                                            required\n                                            type=\"text\"\n                                            placeholder=\"Last name\"\n                                            defaultValue=\"Otto\"\n                                        />\n                                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n                                        <Form.Label>Username</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            />\n                                            <Form.Control.Feedback type=\"invalid\">\n                                            Please choose a username.\n                                            </Form.Control.Feedback>\n                                        </InputGroup>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom03\">\n                                        <Form.Label>City</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"City\" required />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please provide a valid city.\n                                        </Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n                                        <Form.Label>State</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"State\" required />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please provide a valid state.\n                                        </Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group as={Col} md=\"\" controlId=\"validationCustom05\">\n                                        <Form.Label>Zip</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please provide a valid zip.\n                                        </Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Group>\n                                        <Form.Check\n                                            required\n                                            label=\"Agree to terms and conditions\"\n                                            feedback=\"You must agree before submitting.\"\n                                        />\n                                    </Form.Group>\n                                    <Button type=\"submit\">Submit form</Button>\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Validation\n"]},"metadata":{},"sourceType":"module"}