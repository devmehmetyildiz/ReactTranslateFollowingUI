{"ast":null,"code":"import _defineProperty from \"C:\\\\React Devs\\\\corona-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\React Devs\\\\corona-template\\\\src\\\\app\\\\advanced-ui\\\\Dragula.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nconst initialData = {\n  tasks: {\n    'task-1': {\n      id: 'task-1',\n      name: 'Rebecca young',\n      designation: 'Software engineer',\n      imgURL: require(\"../../assets/images/faces/face1.jpg\")\n    },\n    'task-2': {\n      id: 'task-2',\n      name: 'Jacob march',\n      designation: 'UI developer',\n      imgURL: require(\"../../assets/images/faces/face2.jpg\")\n    },\n    'task-3': {\n      id: 'task-3',\n      name: 'Catherine',\n      designation: 'Digital Marketer',\n      imgURL: require(\"../../assets/images/faces/face3.jpg\")\n    },\n    'task-4': {\n      id: 'task-4',\n      name: 'Thomas Cook',\n      designation: 'Director',\n      imgURL: require(\"../../assets/images/faces/face4.jpg\")\n    },\n    'task-5': {\n      id: 'task-5',\n      name: 'Keto Philip',\n      designation: 'Software Tester',\n      imgURL: require(\"../../assets/images/faces/face5.jpg\")\n    },\n    'task-6': {\n      id: 'task-6',\n      name: 'Jacob Stephen',\n      designation: 'UI Developer',\n      imgURL: require(\"../../assets/images/faces/face6.jpg\")\n    },\n    'task-7': {\n      id: 'task-7',\n      name: 'March Creg',\n      designation: 'Technical Support Engineer',\n      imgURL: require(\"../../assets/images/faces/face7.jpg\")\n    },\n    'task-8': {\n      id: 'task-8',\n      name: 'Peter Beckham',\n      designation: 'UI Developer',\n      imgURL: require(\"../../assets/images/faces/face8.jpg\")\n    },\n    'task-9': {\n      id: 'task-9',\n      name: 'John Doe',\n      designation: 'UI Designer',\n      imgURL: require(\"../../assets/images/faces/face9.jpg\")\n    },\n    'task-10': {\n      id: 'task-10',\n      name: 'Williamson',\n      designation: 'Technical Support Engineer',\n      imgURL: require(\"../../assets/images/faces/face10.jpg\")\n    }\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      tittle: 'TEAM A',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4', 'task-5']\n    },\n    'column-2': {\n      id: 'column-2',\n      tittle: 'TEAM B',\n      taskIds: ['task-6', 'task-7', 'task-8', 'task-9', 'task-10']\n    }\n  },\n  columnOrder: ['column-1', 'column-2']\n};\nexport class Column extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.column.tittle)), React.createElement(Droppable, {\n      droppableId: this.props.column.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      className: \"kanbanHeight\",\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.props.tasks.map((task, index) => React.createElement(Task, {\n      key: task.id,\n      task: task,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), provided.placeholder)));\n  }\n\n}\nexport class Task extends Component {\n  render() {\n    return React.createElement(Draggable, {\n      draggableId: this.props.task.id,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      className: \"mt-1 board-portlet\"\n    }, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body p-3 border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.task.imgURL,\n      alt: \"profile\",\n      className: \"img-sm mr-3 rounded-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"p\", {\n      className: \"mb-0 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" \", this.props.task.designation, \" \"))))))));\n  }\n\n}\nexport class Dragula extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        const newColumn = _objectSpread({}, start, {\n          taskIds: newTaskIds\n        });\n\n        const newState = _objectSpread({}, this.state, {\n          columns: _objectSpread({}, this.state.columns, {\n            [newColumn.id]: newColumn\n          })\n        });\n\n        this.setState(newState);\n        return;\n      }\n\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n\n      const newStart = _objectSpread({}, start, {\n        taskIds: startTaskIds\n      });\n\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n\n      const newFinish = _objectSpread({}, finish, {\n        taskIds: finishTaskIds\n      });\n\n      const newState = _objectSpread({}, this.state, {\n        columns: _objectSpread({}, this.state.columns, {\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        })\n      });\n\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Simple Dragula\"), React.createElement(\"p\", {\n      className: \"card-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Drag and drop between Team A and Team B\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      onDragStart: this.onDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.state.columnOrder.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]); //return column.tittle;\n\n      return React.createElement(Column, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    })))))))));\n  }\n\n}\nexport default Dragula;","map":{"version":3,"sources":["C:\\React Devs\\corona-template\\src\\app\\advanced-ui\\Dragula.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","initialData","tasks","id","name","designation","imgURL","require","columns","tittle","taskIds","columnOrder","Column","render","props","column","provided","innerRef","droppableProps","map","task","index","placeholder","Task","draggableProps","dragHandleProps","Dragula","state","onDragEnd","result","destination","source","draggableId","droppableId","start","finish","newTaskIds","Array","from","splice","newColumn","newState","setState","startTaskIds","newStart","finishTaskIds","newFinish","onDragStart","columnId","taskId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst initialData = {\n  tasks: {\n    'task-1': {\n      id: 'task-1', \n      name: 'Rebecca young', \n      designation: 'Software engineer', \n      imgURL: require(\"../../assets/images/faces/face1.jpg\")\n    },\n    'task-2': {\n      id: 'task-2', \n      name: 'Jacob march', \n      designation: 'UI developer', \n      imgURL: require(\"../../assets/images/faces/face2.jpg\")\n    },\n    'task-3': {\n      id: 'task-3', \n      name: 'Catherine', \n      designation: 'Digital Marketer', \n      imgURL: require(\"../../assets/images/faces/face3.jpg\")\n    },\n    'task-4': {\n      id: 'task-4', \n      name: 'Thomas Cook', \n      designation: 'Director', \n      imgURL: require(\"../../assets/images/faces/face4.jpg\")\n    },\n    'task-5': {\n      id: 'task-5', \n      name: 'Keto Philip', \n      designation: 'Software Tester', \n      imgURL: require(\"../../assets/images/faces/face5.jpg\")\n    },\n    'task-6': {\n      id: 'task-6', \n      name: 'Jacob Stephen', \n      designation: 'UI Developer', \n      imgURL: require(\"../../assets/images/faces/face6.jpg\")\n    },\n    'task-7': {\n      id: 'task-7', \n      name: 'March Creg', \n      designation: 'Technical Support Engineer', \n      imgURL: require(\"../../assets/images/faces/face7.jpg\")\n    },\n    'task-8': {\n      id: 'task-8', \n      name: 'Peter Beckham', \n      designation: 'UI Developer', \n      imgURL: require(\"../../assets/images/faces/face8.jpg\")\n    },\n    'task-9': {\n      id: 'task-9', \n      name: 'John Doe', \n      designation: 'UI Designer', \n      imgURL: require(\"../../assets/images/faces/face9.jpg\")\n    },\n    'task-10': {\n      id: 'task-10', \n      name: 'Williamson', \n      designation: 'Technical Support Engineer', \n      imgURL: require(\"../../assets/images/faces/face10.jpg\")\n    },\n  },\n  columns: {\n    'column-1' : {\n      id: 'column-1',\n      tittle: 'TEAM A',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4','task-5'],\n    },\n    'column-2' : {\n      id: 'column-2',\n      tittle: 'TEAM B',\n      taskIds: ['task-6', 'task-7', 'task-8', 'task-9', 'task-10'],\n    },\n  },\n  columnOrder: ['column-1', 'column-2'],\n\n};\n\nexport class Column extends Component {\n  render() {\n    return (\n      <div className=\"col-sm-6\">        \n        <div><h6 className=\"card-title\">{this.props.column.tittle}</h6></div>\n        <Droppable droppableId= {this.props.column.id}>\n          {provided => (\n            <div className=\"kanbanHeight\"\n            ref={provided.innerRef}\n              {...provided.droppableProps}\n              >\n            {this.props.tasks.map ((task, index) => \n              <Task key= {task.id} task={task} index= {index} /> )} \n            {provided.placeholder}\n            </div>\n          )}\n        </Droppable >       \n      </div>\n    )\n  }\n}\nexport class Task extends Component {\n  render() {\n    return ( <Draggable draggableId={this.props.task.id} index={this.props.index}>\n          {(provided) => (\n            <div className=\"mt-1 board-portlet\"\n             {...provided.draggableProps}\n             {...provided.dragHandleProps}\n             ref={provided.innerRef}\n             >\n             <div className=\"card-body p-3 border\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <div className=\"d-flex\">\n                      <img src={this.props.task.imgURL} alt=\"profile\" className=\"img-sm mr-3 rounded-circle\"/>\n                      <div>\n                        <h6 className=\"mb-1\">{this.props.task.name}</h6>\n                        <p className=\"mb-0 text-muted\"> {this.props.task.designation} </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Draggable>\n    )\n  }\n}\n\nexport class Dragula extends Component {\n  state = initialData;\n  onDragEnd = result => {\n    const {destination, source, draggableId} = result;\n    if(!destination) {\n      return;\n    }\n    if (\n      destination.droppableId===source.droppableId && \n      destination.index===source.index\n    ) {\n      return\n    }\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start===finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id] : newColumn,\n        },\n      };\n      \n      this.setState(newState);   \n      return;   \n    }\n\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n    \n    const newState = {\n      ...this.state,\n      columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      }\n    };\n    this.setState(newState);\n  }\n  render() {\n    return (\n    \n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-3\">\n                <h4 className=\"card-title\">Simple Dragula</h4>\n                <p className=\"card-description\">Drag and drop between Team A and Team B</p>\n                <div className=\"card-body\">\n                  <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart}>  \n                    <div className=\"row\">\n                    {\n                      this.state.columnOrder.map(columnId => {\n                      const column = this.state.columns[columnId];\n                      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n                        //return column.tittle;\n                      return <Column key = {column.id} column={column} tasks={tasks} />;\n                      })\n                    }\n                    </div>\n                  </DragDropContext>                        \n                </div>    \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Dragula\n\n\n"]},"metadata":{},"sourceType":"module"}